{"version":3,"sources":["pages/qrcode/index.tsx","pages/qrcode/constant.ts","pages/qrcode/parse-img/index.tsx","utils/cookie.ts","utils/http.ts","utils/is-type.tsx","utils/indexdb.ts","utils/tool.ts","utils/redis.ts","service/fetch.ts","service/resource-api.ts"],"names":["urlStore","partStore","CONDITIONS","label","type","queryIndex","ParseImg","useState","modalVisiable","setModalVisiable","decodeUrl","setDecodeUrl","clipboardImg","setClipboardImg","useEffect","pasteListener","useCallback","e","file","useClipboard","error","parseImg","image","document","createElement","src","URL","createObjectURL","onload","canvas","context","getContext","width","height","drawImage","imageData","getImageData","data","jsQR","success","toggleModal","show","addEventListener","removeEventListener","className","onClick","visible","title","footer","onCancel","style","marginBottom","color","fontSize","alt","text","onCopy","beforeUpload","onChange","info","showUploadList","icon","UploadOutlined","trim","str","replace","Qrcode","dataSource","setDataSource","part","setPart","selectedRowKeys","setSelectedRowKeys","localStorage","getItem","fileName","setFileName","getDataFromIndexedDB","openDB","dbName","storeName","storeOption","keyPath","then","db","getAllData","a","readStore","list","sort","b","key","res","remove","removeStore","update","updateStore","changeDataSoure","forEach","item","onTextChange","row","rowIndex","event","value","target","newData","splice","changeEncode","checked","handleJsonStr","decodeURIComponent","encodeURIComponent","qs","stringify","JSON","parse","console","log","addData","keys","map","i","length","unshift","Math","max","changePart","index","newPart","push","confirm","content","onOk","delKey","changeFocus","isFocus","renderOpt","col","record","checkedChildren","unCheckedChildren","disabled","overlayClassName","trigger","isJson","size","RightCircleOutlined","TextArea","rows","onFocus","onBlur","renderTitle","DeleteOutlined","columns","align","dataIndex","render","getFullUrl","rValue","join","placement","cursor","url","fgColor","display","justifyContent","marginTop","closeModal","saveUrl","setItem","existRedis","exist","saveData","name","setRedis","onQueryClick","params","queryName","filterData","filter","includes","conditions","selectedData","okText","cancelText","window","location","origin","rowKey","rowSelection","pagination","total","pageSize","responsive","closable","getCookie","cname","ca","cookie","split","c","indexOf","substring","tip","msg","modalQueueMap","Map","instance","Axios","create","timeout","interceptors","request","use","config","token","headers","withCredentials","Promise","reject","response","status","resolve","resData","message","code","has","set","warn","delete","codeErrorHandle","other","netErrorHandle","navigator","onLine","RegExp","isNumber","isObject","Object","prototype","toString","call","isArray","getTransaction","mode","transaction","onerror","ev","version","autoIncrement","indexedDB","open","onsuccess","result","onupgradeneeded","objectStoreNames","contains","createObjectStore","addStore","objectStore","add","getAll","get","undefined","getAllKeys","getDataByPage","pageNum","allKeys","count","keysList","allKeysReverse","reverse","len","slice","currentKeys","start","min","end","boundKeyRange","IDBKeyRange","bound","rowData","openCursor","continue","json","filterObjectEmptyValue","arrayGroup","array","subGroupLength","fillItem","reslut","group","Array","fill","getRedis","Resource","redis","val","post","successCode","HEADER","fetchMethod","_url","_config","fetch","ok","Error","statusText","dataKey","directReturn","catch","err","matchUrlSearchParams","urlSearchParams","u","URLSearchParams","reduce","pre","next","constructor","append","FetchApi","bodyParams","method","body","upload","isUpoad","put","patch","this","Http","cdn","HttpResource","doc","directFetch"],"mappings":"gKAoBIA,EAKFC,E,6VClBWC,EAAa,CACxB,CACEC,MAAO,eACPC,KAAM,SACNC,WAAY,QAEd,CACEF,MAAO,MACPC,KAAM,SACNC,WAAY,Q,uECED,SAASC,IACtB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,cAAU,IAOpB,IAAMC,EAAgBC,uBAAY,SAACC,GACjC,IAAMC,EAAOC,YAAaF,GAC1B,IAAKC,EAAM,OAAO,IAAQE,MAAM,wCAChCC,EAASH,KACR,IAiBGG,EAAW,SAACH,GAChB,IAAMI,EAA0BC,SAASC,cAAc,OACvDF,EAAMG,IAAMC,IAAIC,gBAAgBT,GAChCL,EAAgBS,EAAMG,KACtBH,EAAMM,OAAS,WACb,IAAMC,EAA4BN,SAASC,cAAc,UACnDM,EAAUD,EAAOE,WAAW,MAClCF,EAAOG,MAAQV,EAAMU,MACrBH,EAAOI,OAASX,EAAMW,OACtBH,EAAQI,UAAUZ,EAAO,EAAG,GAC5B,IAAMa,EAAuBL,EAAQM,aAAa,EAAG,EAAGd,EAAMU,MAAOV,EAAMW,QACnEI,GAASC,IAAKH,EAAUE,KAAMf,EAAMU,MAAOV,EAAMW,SAAW,IAA5DI,KACR,IAAKA,EAAM,OAAO,IAAQjB,MAAM,8FAChCT,EAAa0B,GACb,IAAQE,QAAQ,gDAIdC,EACJ,eAACC,EAAD,+DACA,WACEhC,EAAiBgC,GACjBA,EAAOlB,SAASmB,iBAAiB,QAAS3B,GAAiBQ,SAASoB,oBAAoB,QAAS5B,KAGrG,OACE,yBAAK6B,UAAU,qBACb,uBAAQA,UAAU,MAAMC,QAASL,GAAY,IAA7C,kCAGA,uBAAOM,QAAStC,EAAeuC,MAAM,iCAAQC,OAAQ,KAAMC,SAAUT,KACnE,yBAAKI,UAAU,qBACb,0BACEA,UAAU,uCACVM,MAAO,CACLC,aAAc,KAHlB,mGAOE,0BAAMD,MAAO,CAAEE,MAAO,sBAAuBC,SAAU,KAAvD,yKAEDzC,GACC,yBAAKgC,UAAU,eACb,yBAAKA,UAAU,kBAAkBnB,IAAKb,EAAc0C,IAAI,KACxD,kBAAC,IAAD,CAAiBC,KAAM7C,EAAW8C,OAAQ,kBAAM,IAAQjB,QAAQ,8BAC9D,yBAAKK,UAAU,mBAAmBlC,KAIxC,uBAAQ+C,aAAc,kBAAM,GAAOC,SA3DtB,SAACC,GACpB,IAAQzC,EAASyC,EAATzC,KACHA,GACLG,EAASH,IAwDwD0C,gBAAgB,GACzE,uBAAQxD,KAAK,UAAUyD,KAAM,kBAACC,EAAA,EAAD,OAA7B,gDF3EZ,IAAMC,EAAO,SAACC,GAAD,OAAiBA,EAAIC,QAAQ,OAAQ,KAKnC,SAASC,IAEtB,MAAoC3D,mBAAgB,IAApD,mBAAO4D,EAAP,KAAmBC,EAAnB,KAGA,EAAwB7D,mBAAgB,IAAxC,mBAAO8D,EAAP,KAAaC,EAAb,KAEA,EAA8C/D,mBAAsB,IAApE,mBAAOgE,EAAP,KAAwBC,EAAxB,KAEA,EAA0CjE,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAAgCF,mBAASkE,aAAaC,QAAQ,QAAU,IAAxE,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA9D,qBAAU,WACR+D,MACC,IAMH,IAAMA,EAAuB,WAC3BC,YAAO,CACLC,OAAQ,eACRC,UAAW,CAAC,YAAa,cACzBC,YAAa,CAAEC,QAAS,SACvBC,MAAK,SAACC,GAEP,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,sEACEC,YAAU,CAAEH,KAAIJ,UAAW,YAAa5E,KAAM,WADhD,cACXoF,EADW,yBAEVA,EAAKC,MAAK,SAACH,EAAQI,GAAT,OAAoBA,EAAEC,IAAML,EAAEK,QAF9B,2CAAH,qDAIhBN,IAAaF,MAAK,WAAoB,IAAnBS,EAAkB,uDAAP,GAC5BxB,EAAcwB,MAGhBL,YAAU,CAAEH,KAAIJ,UAAW,aAAcW,IAAK,IAAKR,MAAK,WAAoB,IAAnBS,EAAkB,uDAAP,GAClE,EAA6BA,EAArBvD,YAAR,MAAe,CAAC,EAAG,EAAG,GAAtB,EACAiC,EAAQjC,MAGVrC,EAAW,CACTqF,aACAQ,OAAQ,SAACF,GAAD,OAAoBG,YAAY,CAAEV,KAAIJ,UAAW,YAAaW,SACtEI,OAAQ,SAAC1D,GAAD,OAAe2D,YAAY,CAAEZ,KAAIJ,UAAW,YAAa3C,WAEnEpC,EAAY,CACV8F,OAAQ,SAAC1D,GAAD,OAAe2D,YAAY,CAAEZ,KAAIJ,UAAW,aAAc3C,eASlE4D,EAAkB,SAAC5D,GACvB+B,EAAc/B,GACdA,EAAK6D,SAAQ,SAACC,GACZnG,EAAS+F,OAAOI,OAUdC,EAAe,SAACC,EAAUV,EAAsBW,GAAjC,OAAsD,SAACC,GAE1E,IAAIC,EAAQD,EAAME,OAAOD,OAAS,GAC5BE,EAAO,YAAOvC,GACdgC,EAAOO,EAAQJ,GACrBD,EAAIV,GAAOa,EACXE,EAAQC,OAAOL,EAAU,EAAzB,2BACKH,GACAE,IAELJ,EAAgBS,KAUZE,EACJ,SAACP,EAAUV,EAAaW,GAAxB,IAA0ClG,EAA1C,uDAAsG,SAAtG,OACA,SAACyG,GACC,IAAMH,EAAO,YAAOvC,GACdgC,EAAOO,EAAQJ,GASrB,GARAD,EAAIV,EAAMvF,GAAQyG,EAEL,WAATzG,GAAsByG,IACxBR,EAAIV,EAAM,aAAc,GAEb,WAATvF,IACFiG,EAAIV,GAAOmB,YAAcD,EAAUE,mBAAmBV,EAAIV,IAAQqB,mBAAmBjD,EAAKsC,EAAIV,OAEnF,UAATvF,EACF,IACEiG,EAAIV,GAAOkB,EAAUI,IAAGC,UAAUC,KAAKC,MAAMf,EAAIV,KAASmB,YAAcK,KAAKD,UAAUD,IAAGG,MAAMf,EAAIV,MACpG,MAAO1E,GACPoG,QAAQC,IAAI,eAAgBrG,GAGhCyF,EAAQC,OAAOL,EAAU,EAAzB,2BACKH,GACAE,IAELJ,EAAgBS,KAMda,EACJ,eAAClF,EAAD,uDAAQ,GAAR,OACA,WACE,IAAMqE,EAAO,YAAOvC,GAChBqD,EAAOd,EAAQe,KAAI,SAACC,GAAD,OAAOA,EAAE/B,OAE5B6B,EAAKG,OAAS,IAChBH,EAAO,EAAE,IAGXd,EAAQkB,QAAR,2BACKvF,GADL,IAEEsD,IAAKkC,KAAKC,IAAL,MAAAD,KAAI,YAAQL,IAAQ,KAE3BvB,EAAgBS,KA6CdqB,EACJ,eAACC,EAAD,uDAAiB,EAAG5H,EAApB,uDAA0C,MAA1C,OACA,WACE,IAAI6H,EAAiB,YAAO5D,GACf,QAATjE,GAEF6H,EAAQC,KAAKL,KAAKC,IAAL,MAAAD,KAAI,YAAQxD,IAAQ,GACjCC,EAAQ2D,GACRhI,EAAU8F,OAAO,CAAEJ,IAAK,EAAGtD,KAAM4F,KACf,QAAT7H,GACT,IAAM+H,QAAQ,CACZpF,MAAO,uCACPqF,QAAS,+DACTC,KAAM,WACJ,IAAMC,EAASL,EAAQtB,OAAOqB,EAAO,GAC/BtB,EAAO,YAAOvC,GAEpBuC,EAAQR,SAAQ,SAACC,UACRA,EAAKmC,EAAO,WACZnC,EAAKmC,EAAO,GAAK,iBACjBnC,EAAKmC,EAAO,GAAK,eAE1BrC,EAAgBS,GAChBpC,EAAQ2D,GACRhI,EAAU8F,OAAO,CAAEJ,IAAK,EAAGtD,KAAM4F,SAarCM,EAAc,SAAClC,EAAUV,EAAsBW,EAAkBkC,GAAnD,OAAwE,WACrFA,IACHnC,EAAIV,GAAOmB,YAAcT,EAAIV,KAE/B,IAAMe,EAAO,YAAOvC,GACdgC,EAAOO,EAAQJ,GACrBI,EAAQC,OAAOL,EAAU,EAAzB,2BACKH,GACAE,IAELJ,EAAgBS,KAQZ+B,GAAY,SAACC,GAAD,OAAiB,SAACnF,EAAcoF,EAAarC,GAC7D,OACE,yBAAK1D,UAAU,cACb,uBACEA,UAAU,MACVgG,gBAAgB,2BAChBC,kBAAkB,2BAClBhC,QAAS8B,EAAOD,EAAM,UACtBhF,SAAUkD,EAAa+B,EAAQD,EAAKpC,EAAU,YAEhD,uBACE1D,UAAU,MACVgG,gBAAgB,eAChBC,kBAAkB,eAClBhC,QAAS8B,EAAOD,EAAM,UACtBhF,SAAUkD,EAAa+B,EAAQD,EAAKpC,EAAU,YAEhD,uBACE1D,UAAU,MACVgG,gBAAgB,qBAChBC,kBAAkB,qBAClBC,UAAWH,EAAOD,EAAM,UACxB7B,QAAS8B,EAAOD,EAAM,YACtBhF,SAAUkD,EAAa+B,EAAQD,EAAKpC,EAAU,cAGhD,uBACEyC,iBAAiB,gBACjB3F,MAAM,OACN4F,QAAQ,QACRjG,MAAO,WACL,OACE,oCACE,uBACEH,UAAU,MACVgG,gBAAgB,gBAChBC,kBAAkB,gBAClBC,UAAWH,EAAOD,EAAM,WAAaO,YAAON,EAAOD,IACnD7B,QAAS8B,EAAOD,EAAM,SACtBhF,SAAUkD,EAAa+B,EAAQD,EAAKpC,EAAU,WAEhD,uBACE1D,UAAU,MACVgG,gBAAgB,eAChBC,kBAAkB,eAClBhC,QAAS8B,EAAOD,EAAM,QACtBhF,SAAUkD,EAAa+B,EAAQD,EAAKpC,EAAU,aAMtD,uBAAQ4C,KAAK,QAAQtG,UAAU,YAA/B,eAEE,kBAACuG,EAAA,EAAD,QAGJ,sBAAOC,SAAP,CACEC,KAAM,EACNC,QAASf,EAAYI,EAAQD,EAAKpC,GAAU,GAC5CiD,OAAQhB,EAAYI,EAAQD,EAAKpC,GAAU,GAC3C5C,SAAU0C,EAAauC,EAAQD,EAAKpC,GACpC1D,UAAU,QACV4D,MAAOjD,OAWTiG,GAAc,SAACxB,GAAD,OAAmB,WACrC,OACE,yBAAKpF,UAAU,eACb,6CAAIoF,EAAQ,EAAZ,UACCA,EAAQ,GACP,uBAASjF,MAAM,gBACb,kBAAC0G,EAAA,EAAD,CAAgB7G,UAAU,YAAYC,QAASkF,EAAWC,EAAO,aAUrE0B,GAA4BrF,EAAKoD,KAAI,SAACiB,EAAaV,GACvD,MAAO,CACLjF,MAAOyG,GAAYxB,GACnB2B,MAAO,SACPhE,IAAK+C,EACLkB,UAAU,GAAD,OAAKlB,GACdmB,OAAQpB,GAAUC,OAQhBoB,GAAa,SAACzH,GAQlB,OAPYgC,EACToD,KAAI,SAAC9B,GACJ,IAAMa,EAA6B,kBAAdnE,EAAKsD,GAAoB5B,EAAK1B,EAAKsD,IAAQ,IAAM,GAChEoE,EAAW1H,EAAKsD,EAAM,YAAcqB,mBAAmBR,GAASA,EACtE,OAAOnE,EAAKsD,EAAM,QAAU,GAAOtD,EAAKsD,EAAM,UAAYqB,mBAAmB+C,GAAUA,KAExFC,KAAK,KACM,IAuChBN,GAAQ9B,QAAQ,CACd7E,MAAO,eACP6G,UAAW,OACX5H,MAAO,QACP2H,MAAO,SACPE,OAlCyB,SAACtG,EAAcoF,EAAarC,GACrD,OACE,uBACEyC,iBAAiB,gBACjB3F,MAAM,OACN4F,QAAQ,QACRiB,UAAU,OACVlH,MAAO,WACL,OACE,oCACE,uDACA,uBACEuG,QAASf,EAAYI,EAAQ,OAAQrC,GAAU,GAC/CiD,OAAQhB,EAAYI,EAAQ,OAAQrC,GAAU,GAC9C5C,SAAU0C,EAAauC,EAAQ,OAAQrC,GACvC1D,UAAU,QACV4D,MAAOjD,OAMf,yBAAKX,UAAU,aAAaM,MAAO,CAAEgH,OAAQ,UAAW9G,MAAO,YAC5DG,GAAQoF,EAAOhD,SAsDxB+D,GAAQxB,KAAK,CACXnF,MAAO,eACP6G,UAAW,SACXD,MAAO,SACPE,OArCsB,SAACtG,EAAcoF,EAAaX,GAClD,IAAMmC,EAAML,GAAWnB,GACvB,OACE,qCACEI,iBAAiB,gBACjB3F,MAAM,OACN4F,QAAQ,QACRiB,UAAU,QACJE,EAA2B,GAArB,CAAErH,SAAS,GALzB,CAMEC,MAAO,WACL,OACE,oCACE,kBAAC,IAAD,CAAQG,MAAO,CAAEgH,OAAQ,WAAa1D,MAAO2D,EAAKjB,KAAM,IAAKkB,QAAQ,YACpED,EACD,yBAAKjH,MAAO,CAAEmH,QAAS,OAAQC,eAAgB,WAAYC,UAAW,SACpE,kBAAC,IAAD,CAAiBhH,KAAM4G,EAAK3G,OAAQ,kBAAM,IAAQjB,QAAQ,8BACxD,uBAAQnC,KAAK,WAAb,yBAOV,uBAAQA,KAAK,UAAU0I,UAAWqB,GAAlC,gCAqBN,IAGmBxE,GAIb6E,GAAa,SAAC7E,GAAD,OAAiB,WAClClF,EAAiB,eAAGkF,GAAM,MAMtB8E,GAAO,uCAAG,gCAAAnF,EAAA,yDACTX,EADS,uBAEZ,IAAQvD,MAAM,+BAFF,iCAKdqD,aAAaiG,QAAQ,MAAO/F,GALd,SAMUgG,YAAWhG,GANrB,mBAMNiG,EANM,EAMNA,MACFC,EAAW,WACf,IAAMrE,EAAQrC,EAAWsD,KAAI,SAACpF,GAC5B,MAAO,CACLyI,KAAMzI,EAAKyI,KACXX,IAAKL,GAAWzH,OAGpB0I,YAASpG,EAAU6B,GACnBgE,GAAW,WAAXA,GACA,IAAQjI,QAAQ,6BAEJ,IAAVqI,EAlBU,wBAmBZ,IAAMzC,QAAQ,CACZC,QAAS,wEACTC,KAAMwC,IArBI,2BAyBdA,IAzBc,4CAAH,qDAgCPG,GAAY,uCAAG,WAAOC,GAAP,yBAAA3F,EAAA,+DACwB2F,EAAnCH,KAAMI,OADK,MACO,GADP,IACwBD,EAAbd,WADX,MACiB,GADjB,WAEAnK,EAASqF,aAFT,OAEbG,EAFa,OAGb2F,EAAa3F,EAAK4F,QAAO,SAAC/I,GAC9B,IAAQsD,EAAmBtD,EAAnBsD,IAAR,EAA2BtD,EAAdyI,KAEb,OADgBnF,QADhB,MAAoB,GAApB,IAEe0F,SAASH,IAAcpB,GAAWzH,GAAMgJ,SAASlB,MAElE/F,EAAc+G,GARK,2CAAH,sDAWlB,OACE,yBAAKvI,UAAU,kBACb,kBAAC,IAAD,CAAW0I,WAAYpL,EAAY8K,aAAcA,KACjD,yBAAKpI,UAAU,WACb,uBAAQA,UAAU,MAAMC,QAAS0E,KAAjC,4BAGA,uBAAQ3E,UAAU,MAAMC,QAhXb,WACf,GAA+B,IAA3B0B,EAAgBoD,OAApB,CAIA,MAAuBxD,EAAWiH,QAAO,SAACjF,GAAD,OAAe5B,EAAgB8G,SAASlF,EAAKR,QAA/E4F,EAAP,oBACAhE,EAAQ,eAAKgE,GAAbhE,QAJE,IAAQnG,MAAM,wEA8WZ,gBAGA,uBAAQwB,UAAU,MAAMC,QAASkF,KAAjC,4BAGA,uBAAQnF,UAAU,MAAMC,QA1WX,WACb0B,EAAgBoD,OAAS,EAC3B,IAAQvG,MAAM,gEAGhB,IAAM+G,QAAQ,CACZpF,MAAO,uCACPyI,OAAQ,eACRC,WAAY,eACZpD,KAAM,WACJ,IAAM3B,EAAUvC,EAAWiH,QAAO,SAACjF,GAAD,OAAgB5B,EAAgB8G,SAASlF,EAAKR,QAChFvB,EAAcsC,GAEdnC,EAAgB2B,SAAQ,SAACP,GACvB3F,EAAS6F,OAAOF,MAElBnB,EAAmB,IACnB,IAAQjC,QAAQ,iCAyVhB,4BAGA,kBAACjC,EAAD,MACA,uBAAQsC,UAAU,MAAMC,SAvEX8C,GAuE8B,WAvEd,WACjClF,EAAiB,eAAGkF,IAAM,OAsEtB,mBAGA,qCACEoD,iBAAiB,gBACjB3F,MAAM,OACN4F,QAAQ,SACFrE,EAAgC,GAArB,CAAE7B,SAAS,GAJ9B,CAKEmH,UAAU,QACVlH,MAAO,WACL,IAAMoH,EAAG,UAAMuB,OAAOC,SAASC,OAAtB,yBAA6CjH,GACtD,OACE,oCACE,kBAAC,IAAD,CAAQzB,MAAO,CAAEgH,OAAQ,WAAa1D,MAAO2D,EAAKjB,KAAM,IAAKkB,QAAQ,YACpED,EACD,yBAAKjH,MAAO,CAAEmH,QAAS,OAAQC,eAAgB,WAAYC,UAAW,SACpE,kBAAC,IAAD,CAAiBhH,KAAM4G,EAAK3G,OAAQ,kBAAM,IAAQjB,QAAQ,8BACxD,oDAOV,uBAAQK,UAAU,OAAlB,oCAIJ,uBACEiJ,OAAO,MACPC,aAAc,CACZvH,kBACAb,SA1Ge,SAAC8D,GACtBhD,EAAmBgD,KA2GfrD,WAAYA,EACZuF,QAASA,GACTqC,WAAY,CACVC,MAAO7H,EAAWwD,OAClBsE,SAAU,EACVC,YAAY,KAIhB,uBACEnJ,MAAM,kBACND,QAAStC,EAAa,SACtB2L,UAAU,EACVV,WAAW,eACXD,OAAO,eACPvI,SAAUuH,GAAW,YACrBnC,KAAMoC,IAEN,kLACA,uBAAOjE,MAAO7B,EAAUjB,SAAU,SAACzC,GAAD,OAAY2D,EAAY3D,EAAEwF,OAAOD,OAAS,W,iCGxlBpF,SAAS4F,EAAUC,GAGjB,IAFA,IAAIvB,EAAOuB,EAAQ,IACfC,EAAK/K,SAASgL,OAAOC,MAAM,KACtB9E,EAAI,EAAGA,EAAI4E,EAAG3E,OAAQD,IAAK,CAClC,IAAI+E,EAAIH,EAAG5E,GAAG3D,OACd,GAAuB,GAAnB0I,EAAEC,QAAQ5B,GACZ,OAAO2B,EAAEE,UAAU7B,EAAKnD,OAAQ8E,EAAE9E,QAGtC,MAAO,G,kfCZHiF,EAAM,SAACC,GACXxF,QAAQjG,MAAMyL,IAGVC,EAAgB,IAAIC,IAmFpBC,EAAWC,IAAMC,OAAO,CAAEC,QAAS,MAOzCH,EAASI,aAAaC,QAAQC,KAC5B,SAACC,GAEC,IAAIC,EAAQpB,EAAU,SAGtB,OAFAoB,IAAUD,EAAOE,QAAQD,MAAQA,GACjCD,EAAOG,iBAAkB,EAClBH,KAET,SAACnM,GAAD,OAAWuM,QAAQC,OAAOxM,MAQ5B4L,EAASI,aAAaS,SAASP,KAC7B,SAAC1H,GACC,OAAIA,EAAIkI,QAAwB,KAAdlI,EAAIkI,OACbH,QAAQI,QAAQnI,EAAIvD,OA1GT,SAAC2L,GACvB,IAAIC,EAAUD,EAAQC,QACtB,OAAQD,EAAQE,MACd,KAAK,EACHD,EAAUA,GAAW,2BACrB,MACF,KAAK,OACHA,EAAUA,GAAW,oBACrB,MACF,KAAK,OACHA,EAAUA,GAAW,gCACrB,MACF,KAAK,OACHA,EAAUA,GAAW,+DACrB,MACF,KAAK,OACHA,EAAUA,GAAW,yBACrB,MACF,KAAK,OACHA,EAAUA,GAAW,2EACrB,MACF,KAAK,OACHA,EAAUA,GAAW,yGACrB,MACF,KAAK,IACHA,EAAUA,GAAW,2BAcrBnB,EAAcqB,IAAIH,EAAQE,QAG9BpB,EAAcsB,IAAIJ,EAAQE,KAAM,CAC9BA,KAAMF,EAAQE,KACdD,QAASA,IAGX5G,QAAQC,IAAI,iBAAkBwF,GAEV,KAAhBkB,EAAQE,KACV7G,QAAQgH,KAAKJ,IAGb5G,QAAQjG,MAAM6M,GACdnB,EAAcwB,OAAON,EAAQE,QAsD3BK,CAAgB3I,EAAIvD,MACbsL,QAAQC,OAAOhI,OAG1B,SAACxE,GACC,IAAQyM,EAAazM,EAAbyM,SACR,OAAIA,GAvDe,SAACC,EAAaU,GACnC,OAAQV,GAEN,KAAK,IAEH,MACF,KAAK,IACHlB,EAAI,4DAIJ,MACF,KAAK,IACHA,EAAI,mCACJ,MACF,QACEvF,QAAQC,IAAIkH,IAwCZC,CAAeZ,EAASC,OAAQD,EAASxL,KAAK4L,SACvCN,QAAQC,OAAOC,IAGjBnC,OAAOgD,UAAUC,OAGbhB,QAAQC,OAAOxM,QAHxB,KCpHC,IAAIwN,OACP,iZACA,KD2HW5B,ICtHF6B,EAAW,SAACrI,GACvB,MAAwB,kBAAVA,GAOHsI,EAAW,SAACtI,GACvB,MAAiD,oBAA1CuI,OAAOC,UAAUC,SAASC,KAAK1I,IAe3B2I,EAAU,SAAC3I,GACtB,MAAiD,mBAA1CuI,OAAOC,UAAUC,SAASC,KAAK1I,I,iCCtClC4I,EAAiB,SAAChK,EAAiBJ,EAAmBqK,GAC1D,IAAMzJ,EAAMR,EAAGkK,YAAY,CAACtK,GAAYqK,GAIxC,OAHAzJ,EAAI2J,QAAU,SAACC,GACbnI,QAAQgH,KAAKmB,IAER5J,GAGId,EAAS,SAAC,GAAD,IACpBC,EADoB,EACpBA,OADoB,IAEpB0K,eAFoB,MAEV,EAFU,MAGpBzK,iBAHoB,MAGR,CAAC,IAHO,MAIpBC,mBAJoB,MAIN,CAAEyK,eAAe,GAJX,SAWpB,IAAI/B,SAAQ,SAACI,EAASH,GACpB,IAAIxI,EACCL,GAAQ6I,EAAO,6BAEpB,IAAMP,EAAU3B,OAAOiE,UAAUC,KAAK7K,EAAQ0K,GAE9CpC,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,gBAAiB9H,GAC9BqH,EAAOrH,IAGT8G,EAAQwC,UAAY,SAAUtJ,GAC5BnB,EAAKiI,EAAQyC,OACb/B,EAAQ3I,IAGViI,EAAQ0C,gBAAkB,SAAUxJ,GAClCnB,EAAKmB,EAAME,OAAOqJ,OAElB9K,EAAUkB,SAAQ,SAAC4E,GACZ1F,EAAG4K,iBAAiBC,SAASnF,IAClB1F,EAAG8K,kBAAkBpF,EAAM7F,WAMtCkL,EAAW,SAAC,GAAD,IACtB/K,EADsB,EACtBA,GACAJ,EAFsB,EAEtBA,UAFsB,IAGtB3C,YAHsB,MAGf,GAHe,SAStB,IAAIsL,SAAQ,SAACI,EAASH,GACfxI,GAAIwI,EAAO,cACX5I,GAAW4I,EAAO,qBACvB,IAAMP,EAAU+B,EAAehK,EAAIJ,EAAW,aAAaoL,YAAYpL,GAAWqL,IAAIhO,GAEtFgL,EAAQwC,UAAY,SAAUtJ,GAC5BwH,EAAQxH,IAGV8G,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,iBACbT,EAAOrH,QAIAP,EAAc,SAAC,GAAD,IACzBZ,EADyB,EACzBA,GACAJ,EAFyB,EAEzBA,UAFyB,IAGzB3C,YAHyB,MAGlB,GAHkB,SASzB,IAAIsL,QAAJ,uCAAY,WAAOI,EAASH,GAAhB,iBAAAtI,EAAA,6DACLF,GAAIwI,EAAO,cACX5I,GAAW4I,EAAO,qBAFb,SAGQrI,EAAU,CAAEH,KAAIJ,YAAWW,IAAKtD,EAAKsD,MAH7C,OAGJC,EAHI,QAIJyH,EAAU+B,EAAehK,EAAIJ,EAAW,aAC3CoL,YAAYpL,GACZY,EAAM,MAAQ,OAAOvD,IAEhBwN,UAAY,SAAUtJ,GAC5BwH,EAAQxH,IAGV8G,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,oBACbT,EAAOrH,IAdC,2CAAZ,0DAkBWhB,EAAY,SAAC,GAAD,IACvBH,EADuB,EACvBA,GACAJ,EAFuB,EAEvBA,UACAW,EAHuB,EAGvBA,IAHuB,IAIvBvF,YAJuB,MAIhB,MAJgB,SAWvB,IAAIuN,SAAQ,SAACI,EAASH,GACfxI,GAAIwI,EAAO,cACX5I,GAAW4I,EAAO,qBACvB,IACMwC,EADchB,EAAehK,EAAIJ,GACPoL,YAAYpL,GACtCqI,EACK,WAATjN,EAAoBgQ,EAAYE,SAAWF,EAAYG,IAAI5K,GAE7D0H,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,kBACbT,EAAOrH,IAGT8G,EAAQwC,UAAY,SAAUtJ,GACxB8G,EAAQyC,OACV/B,EAAQV,EAAQyC,QAEhB/B,OAAQyC,QAKH1K,EAAc,SAAC,GAAD,IACzBV,EADyB,EACzBA,GACAJ,EAFyB,EAEzBA,UACAW,EAHyB,EAGzBA,IAHyB,OASzB,IAAIgI,SAAQ,SAACI,EAASH,GACfxI,GAAIwI,EAAO,cACX5I,GAAW4I,EAAO,qBACvB,IAEMP,EAFc+B,EAAehK,EAAIJ,EAAW,aAClBoL,YAAYpL,GAChBsJ,OAAO3I,GAEnC0H,EAAQwC,UAAY,SAAUtJ,GAC5BwH,EAAQxH,IAEV8G,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,oBACbT,EAAOrH,QAIAkK,EAAa,SAAC,GAAD,IACxBrL,EADwB,EACxBA,GACAJ,EAFwB,EAExBA,UAFwB,OAOxB,IAAI2I,SAAQ,SAACI,EAASH,GACfxI,GAAIwI,EAAO,cACX5I,GAAW4I,EAAO,qBACvB,IAEMP,EAFc+B,EAAehK,EAAIJ,GACPoL,YAAYpL,GAChByL,aAE5BpD,EAAQwC,UAAY,SAAUtJ,GAC5BwH,EAAQV,EAAQyC,SAElBzC,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,qBACbT,EAAOrH,QAUAmK,EAAgB,SAAC,GAAD,IAC3BtL,EAD2B,EAC3BA,GACAJ,EAF2B,EAE3BA,UACA2L,EAH2B,EAG3BA,QAH2B,IAI3B1E,gBAJ2B,MAIhB,GAJgB,SAW3B,IAAI0B,QAAJ,uCAAY,WAAOI,EAASH,GAAhB,yCAAAtI,EAAA,6DACLF,GAAIwI,EAAO,cACX5I,GAAW4I,EAAO,qBAFb,SAGmB6C,EAAW,CAAErL,KAAIJ,cAHpC,aAGJ4L,EAHI,QAIEjJ,OAAS,GAJX,uBAKRoG,EAAQ,CAAEG,KAAM,EAAG7L,KAAM,GAAI2J,MAAO,IAL5B,0BAaV,IALMsD,EAAcF,EAAehK,EAAIJ,EAAW,YAC5CoL,EAAcd,EAAYc,YAAYpL,GACtC6L,EAAQ5E,GAAY,GACtB6E,EAAW,GACTC,EAAiBH,EAAQI,UACtBtJ,EAAI,EAAGuJ,EAAMF,EAAepJ,OAAQD,EAAIuJ,EAAKvJ,GAAKmJ,EACzDC,EAAS5I,KAAK6I,EAAeG,MAAMxJ,EAAGA,EAAImJ,IAEtCM,EAAcL,GAAUH,GAAW,GAAK,GACxCS,EAAQvJ,KAAKwJ,IAAL,MAAAxJ,KAAI,YAAQsJ,IACpBG,EAAMzJ,KAAKC,IAAL,MAAAD,KAAI,YAAQsJ,IAClBI,EAAgBC,YAAYC,MAAML,EAAOE,GACzCI,EAAiB,IACjBrE,EAAU+C,EAAYuB,WAAWJ,IAC/B1B,UAAY,SAAUtJ,GAC5B,IAAM2D,EAAS3D,EAAME,OAAOqJ,OACvB5F,GAILwH,EAAQxJ,KAAKgC,EAAO1D,OACpB0D,EAAO0H,YAJL7D,EAAQ,CAAEG,KAAM,EAAGlC,MAAO4E,EAAQjJ,OAAQtF,KAAMqP,EAAQV,aAM5D3D,EAAQkC,QAAU,SAAUhJ,GAC1Bc,QAAQgH,KAAK,kBACbT,EAAO,CAAEM,KAAM,EAAG9M,MAAOmF,KAjCjB,4CAAZ,0DC5LWO,EAAgB,SAAC9C,GAC5B,IAAKA,EAAK,OAAOA,EACjB,IAAI6N,EAAO,KACX,IACEA,EAAO1K,KAAKC,MAAMpD,EAAIC,QAAQ,+CAAgD,UAC9E,MAAO7C,GACPiG,QAAQC,IAAIlG,GAEd,OAAOyQ,EAAO1K,KAAKD,UAAU2K,EAAM,KAAM,GAAK7N,GAGnCiF,EAAS,SAACjF,GACrB,IACE,OAAO8K,EAAS3H,KAAKC,MAAMpD,IAC3B,MAAO/C,GACP,OAAO,IA4BE6Q,EAAyB,SAACzP,GACrC,IAAKA,EAAM,MAAO,GAClB,IAAMyN,EAAS,GAIf,OAHAf,OAAOvH,KAAKnF,GAAM6D,SAAQ,SAACP,GACX,OAAdtD,EAAKsD,SAA+B6K,IAAdnO,EAAKsD,KAAuBmK,EAAOnK,GAAOtD,EAAKsD,OAEhEmK,GAQKiC,EAAa,SAACC,EAAcC,EAAwBC,GAEhE,IADA,IAAMC,EAAS,GACNzK,EAAI,EAAGuJ,EAAMe,EAAMrK,OAAQD,EAAIuJ,EAAKvJ,GAAKuK,EAAgB,CAChE,IAAMG,EAAQJ,EAAMd,MAAMxJ,EAAGA,EAAIuK,GAC7BC,GAAYE,EAAMzK,OAASsK,GAC7BG,EAAMlK,KAAN,MAAAkK,EAAK,YAAS,IAAIC,MAAMJ,EAAiBG,EAAMzK,QAAQ2K,KAAKJ,KAE9DC,EAAOjK,KAAKkK,GAEd,OAAOD,G,aCtEII,EAAQ,uCAAG,WAAO5M,GAAP,eAAAL,EAAA,yDACjBK,EADiB,uBAEpB0B,QAAQjG,MAAM,0BAFM,kBAGbuM,QAAQC,UAHK,gCAMG4E,IAASC,MAAMlC,IAAI,CAAEnQ,KAAM,MAAOuF,OAAO,IAN5C,cAMdC,EANc,yBH2BE,kBGpBNA,EAAOuB,KAAKC,MAAMxB,GAAOA,GAPrB,2DASbyB,QAAQC,IAAR,OATa,0DAAH,sDAaRyD,EAAQ,uCAAG,WAAOpF,EAAaa,GAApB,eAAAlB,EAAA,yDACjBK,EADiB,uBAEpB0B,QAAQjG,MAAM,0BAFM,kBAGbuM,QAAQC,UAHK,UAKjBpH,EALiB,uBAMpBa,QAAQjG,MAAM,0BANM,kBAObuM,QAAQC,UAPK,cAShB8E,EAAM5D,EAAStI,IAAU2I,EAAQ3I,GAASW,KAAKD,UAAUV,GAASA,EAAMyI,WATxD,2BAWbuD,IAASC,MAAME,KAAK,CAAEvS,KAAM,OAAS,CAAEiC,KAAM,CAAEsD,MAAK+M,UAXvC,2DAabrL,QAAQC,IAAR,OAba,0DAAH,wDA6BRqD,EAAU,uCAAG,WAAOhF,GAAP,SAAAL,EAAA,yDACnBK,EADmB,uBAEtB0B,QAAQjG,MAAM,0BAFQ,kBAGfuM,QAAQC,UAHO,yCAMf4E,IAASC,MAAMlC,IAAI,CAAEnQ,KAAM,SAAUuF,SANtB,yDAQf0B,QAAQC,IAAR,OARe,yDAAH,uD,mICxCjBsL,EAAc,CAAC,GAWfC,EAAc,CAClBpF,QAAS,CACP,eAAgB,mCAIdqF,EAAc,SAACC,GAAqC,IAAvBC,EAAsB,uDAAP,GAChD,OAAOC,MAAMF,EAAD,YAAC,eAAWF,GAAWG,IAChC7N,MAAK,SAAC0I,GACL,IAAKA,EAASqF,GACZ,MAAMC,MAAMtF,EAASuF,YAEvB,OAAOvF,EAASgE,OAAO1M,UAAKqL,GAAW,kBAAM7C,QAAQI,QAAQ,UAE9D5I,MAAK,SAACS,GACL,MAAmCA,EAA3B2H,cAAR,MAAiB,GAAjB,EAAqBW,EAActI,EAAdsI,KAAMrB,EAAQjH,EAARiH,IAC3B,EAA6BU,EAArB8F,eAAR,MAAkB,OAAlB,EACA,EAAiCL,EAAzBM,aACR,YADA,SAES3F,QAAQI,QAAQnI,GAEZ,MAATsI,EAEKP,QAAQC,OAAOhI,GAEpBgN,EAAYlG,QAAQwB,IAAS,EACxBP,QAAQI,QAAQnI,EAAIyN,IAAY,KAEzC,EAAA/N,EAAQlE,MAAMyL,GAAO,4BACdc,QAAQC,OAAOhI,OAEvB2N,OAAM,SAACC,GACN,MAAMA,MAINC,EAAuB,SAACtJ,EAAauJ,GACzC,IAAKA,EACH,OAAOvJ,EAAIlG,QAAQ,YAAa,IAElC,IAAM0P,EAAI,IAAIC,gBAEVb,EAAOhE,OAAOvH,KAAKkM,GAAiBG,QAAO,SAACC,EAAKC,GACnD,OAAID,EAAIzI,SAAS,IAAM0I,GACdD,EAAI7P,QAAQ,IAAM8P,EAAML,EAAgBK,KAE3CL,EAAgBK,IAASL,EAAgBK,GAAMC,cAAgB3B,MACjEqB,EAAgBK,GAAM7N,SAAQ,SAACM,GAC7BmN,EAAEM,OAAOF,EAAMvN,MAGjBmN,EAAEM,OAAOF,EAAML,EAAgBK,IAE1BD,KAER3J,GAGH,OADA4I,EAAOA,EAAK9O,QAAQ,YAAa,MACD,KAAjB0P,EAAE1E,WAAoB,GAAK,IAAM0E,IAG5CO,EAGJ,WAAYnB,GAAe,IAAD,gCAF1B5I,IAAM,GAEoB,KAI1BoG,IAAM,SAACmD,EAAyBS,EAAqB5G,GACnD,OAAOuF,EACLW,EAAqB,EAAKtJ,IAAN,YAAC,eAAeuJ,GAAoBS,IACxD5G,IAPsB,KAW1BoF,KAAO,SAACe,EAA0BS,EAAkB5G,GAClD,OAAOuF,EAAYW,EAAqB,EAAKtJ,IAAKuJ,GAAhC,YAAC,eACdnG,GADa,IAEhB6G,OAAQ,OACRC,KAAMlN,KAAKD,UAAU4K,YAAuBqC,QAftB,KAmB1BG,OAAS,SAACZ,EAAyBS,GACjC,OAAOrB,EAAYW,EAAqB,EAAKtJ,IAAKuJ,GAAkB,CAClEU,OAAQ,OACRG,SAAS,EACTF,KAAMF,KAvBgB,KA2B1B7F,OAAS,SAACoF,EAAyBnG,GACjC,OAAOuF,EAAYW,EAAqB,EAAKtJ,IAAKuJ,GAAhC,YAAC,eACdnG,GADa,IAEhB6G,OAAQ,aA9Bc,KAkC1BI,IAAM,SAACd,EAAyBS,EAAoB5G,GAClD,OAAOuF,EAAYW,EAAqB,EAAKtJ,IAAKuJ,GAAhC,YAAC,eACdnG,GADa,IAEhB6G,OAAQ,MACRC,KAAMlN,KAAKD,UAAU4K,YAAuBqC,QAtCtB,KA0C1BM,MAAQ,SAACf,EAAyBS,EAAoB5G,GACpD,OAAOuF,EAAYW,EAAqB,EAAKtJ,IAAKuJ,GAAhC,YAAC,eACdnG,GADa,IAEhB6G,OAAQ,QACRC,KAAMlN,KAAKD,UAAU4K,YAAuBqC,QA7C9CO,KAAKvK,IAAM4I,GAsDA4B,EAJF,SAACxK,GACZ,OAAO,IAAI+J,EAAS/J,IC9HTqI,EAAW,CAItBoC,IAAKC,EAAa,GAAD,OARF,IAQE,OAN0C,GAM1C,kBACjB1K,IAAK0K,EAAa,GAAD,OATF,IASE,OAP0C,GAO1C,eAIjBpC,MAAOoC,EAAa,GAAD,OAbJ,IAaI,OAXwC,GAWxC,iBAKnBC,IAAKD,EAAa,GAAD,OAlBF,IAkBE,OAhB0C,GAgB1C,WAKjBE,YAAaF,EAAa,W","file":"static/js/7.7c553a56.chunk.js","sourcesContent":["/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-01-24 18:39:02\n * @Last Modified by: qiuz\n */\n\nimport React, { ReactText, useEffect, useState } from 'react';\nimport { Button, Input, Switch, Table, Tooltip, message, Modal } from 'antd';\nimport './index.less';\nimport QRCode from 'qrcode.react';\nimport { ColumnItemType, UpdateStoreFn } from './type';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { existRedis, handleJsonStr, openDB, readStore, removeStore, setRedis, updateStore, isJson } from 'utils';\nimport { DeleteOutlined, RightCircleOutlined } from '@ant-design/icons';\nimport qs from 'qs';\nimport { SearchBox } from 'components';\nimport { CONDITIONS } from './constant';\nimport ParseImg from './parse-img';\n\nlet urlStore: {\n    getAllData: () => Promise<any>;\n    update: UpdateStoreFn;\n    remove: (key: ReactText) => Promise<unknown>;\n  },\n  partStore: { update: UpdateStoreFn };\n\n// 去除字符串中的所有空格\nconst trim = (str: string) => str.replace(/\\s*/g, '');\n\n/**\n * 将需要编码的url进行分段编码展示，可以针对某部分进行编码以及二次编码操作\n */\nexport default function Qrcode() {\n  // 表格数据\n  const [dataSource, setDataSource] = useState<any[]>([]);\n\n  // 段数据，用来表示分段\n  const [part, setPart] = useState<any[]>([]);\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([]);\n\n  const [modalVisiable, setModalVisiable] = useState({});\n\n  const [fileName, setFileName] = useState(localStorage.getItem('KEY') || '');\n\n  /**\n   * 打开数据库\n   */\n  useEffect(() => {\n    getDataFromIndexedDB();\n  }, []);\n\n  /**\n   * 从indexed获取数据\n   * @param data\n   */\n  const getDataFromIndexedDB = () => {\n    openDB({\n      dbName: 'tools_qrcode',\n      storeName: ['url_table', 'part_table'],\n      storeOption: { keyPath: 'key' }\n    }).then((db: IDBDatabase) => {\n      // 读取url_table数据\n      const getAllData = async () => {\n        const list = await readStore({ db, storeName: 'url_table', type: 'getAll' });\n        return list.sort((a: any, b: any) => b.key - a.key);\n      };\n      getAllData().then((res: any = {}) => {\n        setDataSource(res);\n      });\n      // 读取part_table数据\n      readStore({ db, storeName: 'part_table', key: 0 }).then((res: any = {}) => {\n        const { data = [0, 1, 2] } = res;\n        setPart(data);\n      });\n      // 提供全局操作对象\n      urlStore = {\n        getAllData,\n        remove: (key: ReactText) => removeStore({ db, storeName: 'url_table', key }),\n        update: (data: any) => updateStore({ db, storeName: 'url_table', data })\n      };\n      partStore = {\n        update: (data: any) => updateStore({ db, storeName: 'part_table', data })\n      };\n    });\n  };\n\n  /**\n   * 修改dataSource 同时更新数据库记录\n   * @param data\n   */\n  const changeDataSoure = (data: any) => {\n    setDataSource(data);\n    data.forEach((item: any) => {\n      urlStore.update(item);\n    });\n  };\n\n  /**\n   * 文本框输入事件\n   * @param row 当前行数据\n   * @param key 当前输入的端\n   * @param rowIndex 当前行在dataSource的索引\n   */\n  const onTextChange = (row: any, key: number | string, rowIndex: number) => (event: any) => {\n    // 去除json格式化后的换行空格等字符\n    let value = event.target.value || '';\n    const newData = [...dataSource];\n    const item = newData[rowIndex];\n    row[key] = value;\n    newData.splice(rowIndex, 1, {\n      ...item,\n      ...row\n    });\n    changeDataSoure(newData);\n  };\n\n  /**\n   * 编码切换\n   * @param row\n   * @param key\n   * @param rowIndex\n   * @param type\n   */\n  const changeEncode =\n    (row: any, key: number, rowIndex: number, type: 'encode' | 'reencode' | 'decode' | 'hide' | 'tourl' = 'encode') =>\n    (checked: boolean) => {\n      const newData = [...dataSource];\n      const item = newData[rowIndex];\n      row[key + type] = checked;\n      // 再次编码依赖于编码\n      if (type === 'encode' && !checked) {\n        row[key + 'reencode'] = false;\n      }\n      if (type === 'decode') {\n        row[key] = handleJsonStr(checked ? decodeURIComponent(row[key]) : encodeURIComponent(trim(row[key])));\n      }\n      if (type === 'tourl') {\n        try {\n          row[key] = checked ? qs.stringify(JSON.parse(row[key])) : handleJsonStr(JSON.stringify(qs.parse(row[key])));\n        } catch (e) {\n          console.log('tourl error:', e);\n        }\n      }\n      newData.splice(rowIndex, 1, {\n        ...item,\n        ...row\n      });\n      changeDataSoure(newData);\n    };\n\n  /**\n   * 新增数据\n   */\n  const addData =\n    (data = {}) =>\n    () => {\n      const newData = [...dataSource];\n      let keys = newData.map((i) => i.key);\n      // 首次打开没有值，需要设置为-1 原因是Math.max() + 1 为 -Infinity\n      if (keys.length < 1) {\n        keys = [-1];\n      }\n      // 向头部增加 保证新增的数据在第一条\n      newData.unshift({\n        ...data,\n        key: Math.max(...keys) + 1\n      });\n      changeDataSoure(newData);\n    };\n\n  /**\n   * 复制一条已有数据\n   */\n  const copyData = () => {\n    if (selectedRowKeys.length !== 1) {\n      message.error('请选择一条要复制的数据');\n      return;\n    }\n    const [selectedData] = dataSource.filter((item: any) => selectedRowKeys.includes(item.key));\n    addData({ ...selectedData })();\n  };\n\n  /**\n   * 删除行数据\n   */\n  const deleteData = () => {\n    if (selectedRowKeys.length < 1) {\n      message.error('请选择需要删除的数据');\n      return;\n    }\n    Modal.confirm({\n      title: '确认删除吗？',\n      okText: '确定',\n      cancelText: '取消',\n      onOk: () => {\n        const newData = dataSource.filter((item: any) => !selectedRowKeys.includes(item.key));\n        setDataSource(newData);\n        // 删除后需要同步删除数据库记录\n        selectedRowKeys.forEach((key: ReactText) => {\n          urlStore.remove(key);\n        });\n        setSelectedRowKeys([]);\n        message.success('删除成功');\n      }\n    });\n  };\n\n  /**\n   * 修改段\n   * @param index\n   * @param type\n   */\n  const changePart =\n    (index: number = 0, type: 'add' | 'sub' = 'add') =>\n    () => {\n      let newPart: number[] = [...part];\n      if (type === 'add') {\n        // 增加的段的key在当前段的基础上加1\n        newPart.push(Math.max(...part) + 1);\n        setPart(newPart);\n        partStore.update({ key: 0, data: newPart });\n      } else if (type === 'sub') {\n        Modal.confirm({\n          title: '确认删除吗？',\n          content: '删除后，数据无法恢复',\n          onOk: () => {\n            const delKey = newPart.splice(index, 1);\n            const newData = [...dataSource];\n            // 删除时同步删除对应段的记录值\n            newData.forEach((item: any) => {\n              delete item[delKey[0]];\n              delete item[delKey[0] + 'encode'];\n              delete item[delKey[0] + 'reencode'];\n            });\n            changeDataSoure(newData);\n            setPart(newPart);\n            partStore.update({ key: 0, data: newPart });\n          }\n        })\n      }\n    };\n\n  /**\n   * 失焦时，json格式化\n   * @param row\n   * @param key\n   * @param rowIndex\n   * @param isFocus\n   */\n  const changeFocus = (row: any, key: number | string, rowIndex: number, isFocus: boolean) => () => {\n    if (!isFocus) {\n      row[key] = handleJsonStr(row[key]);\n    }\n    const newData = [...dataSource];\n    const item = newData[rowIndex];\n    newData.splice(rowIndex, 1, {\n      ...item,\n      ...row\n    });\n    changeDataSoure(newData);\n  };\n\n  /**\n   * 生成操作区按钮\n   * @param col\n   * @returns\n   */\n  const renderOpt = (col: number) => (text: string, record: any, rowIndex: number) => {\n    return (\n      <div className=\"input-wrap\">\n        <Switch\n          className=\"btn\"\n          checkedChildren=\"解码显示\"\n          unCheckedChildren=\"编码显示\"\n          checked={record[col + 'decode']}\n          onChange={changeEncode(record, col, rowIndex, 'decode')}\n        />\n        <Switch\n          className=\"btn\"\n          checkedChildren=\"编码\"\n          unCheckedChildren=\"编码\"\n          checked={record[col + 'encode']}\n          onChange={changeEncode(record, col, rowIndex, 'encode')}\n        />\n        <Switch\n          className=\"btn\"\n          checkedChildren=\"再编码\"\n          unCheckedChildren=\"再编码\"\n          disabled={!record[col + 'encode']}\n          checked={record[col + 'reencode']}\n          onChange={changeEncode(record, col, rowIndex, 'reencode')}\n        />\n\n        <Tooltip\n          overlayClassName=\"qrcode-result\"\n          color=\"#fff\"\n          trigger=\"click\"\n          title={() => {\n            return (\n              <>\n                <Switch\n                  className=\"btn\"\n                  checkedChildren=\"Json转url\"\n                  unCheckedChildren=\"Json转url\"\n                  disabled={!record[col + 'tourl'] && !isJson(record[col])}\n                  checked={record[col + 'tourl']}\n                  onChange={changeEncode(record, col, rowIndex, 'tourl')}\n                />\n                <Switch\n                  className=\"btn\"\n                  checkedChildren=\"隐藏\"\n                  unCheckedChildren=\"隐藏\"\n                  checked={record[col + 'hide']}\n                  onChange={changeEncode(record, col, rowIndex, 'hide')}\n                />\n              </>\n            );\n          }}\n        >\n          <Button size=\"small\" className=\"btn more\">\n            更多\n            <RightCircleOutlined />\n          </Button>\n        </Tooltip>\n        <Input.TextArea\n          rows={7}\n          onFocus={changeFocus(record, col, rowIndex, true)}\n          onBlur={changeFocus(record, col, rowIndex, false)}\n          onChange={onTextChange(record, col, rowIndex)}\n          className=\"input\"\n          value={text}\n        />\n      </div>\n    );\n  };\n\n  /**\n   * 表头\n   * @param index 列\n   * @returns\n   */\n  const renderTitle = (index: number) => () => {\n    return (\n      <div className=\"table-title\">\n        <>第{index + 1}段</>\n        {index > 2 && (\n          <Tooltip title=\"删除\">\n            <DeleteOutlined className=\"btn no-mb\" onClick={changePart(index, 'sub')} />\n          </Tooltip>\n        )}\n      </div>\n    );\n  };\n\n  /**\n   * 表格列\n   */\n  const columns: ColumnItemType[] = part.map((col: number, index: number) => {\n    return {\n      title: renderTitle(index),\n      align: 'center',\n      key: col,\n      dataIndex: `${col}`,\n      render: renderOpt(col)\n    };\n  });\n\n  /**\n   * 获取完整的url\n   * @param data\n   */\n  const getFullUrl = (data: any) => {\n    const url = part\n      .map((key: string) => {\n        const value = typeof data[key] === 'string' ? trim(data[key] || '') : '';\n        const rValue = !!data[key + 'reencode'] ? encodeURIComponent(value) : value;\n        return data[key + 'hide'] ? '' : !!data[key + 'encode'] ? encodeURIComponent(rValue) : rValue;\n      })\n      .join('');\n    return url || '';\n  };\n\n  /**\n   * 每行增加名称\n   * @param text\n   * @param record\n   * @param rowIndex\n   * @returns\n   */\n  const renderTableRowName = (text: string, record: any, rowIndex: number) => {\n    return (\n      <Tooltip\n        overlayClassName=\"qrcode-result\"\n        color=\"#fff\"\n        trigger=\"click\"\n        placement=\"left\"\n        title={() => {\n          return (\n            <>\n              <p>修改名称</p>\n              <Input\n                onFocus={changeFocus(record, 'name', rowIndex, true)}\n                onBlur={changeFocus(record, 'name', rowIndex, false)}\n                onChange={onTextChange(record, 'name', rowIndex)}\n                className=\"input\"\n                value={text}\n              />\n            </>\n          );\n        }}\n      >\n        <div className=\"input-wrap\" style={{ cursor: 'pointer', color: '#1890ff' }}>\n          {text || record.key}\n        </div>\n      </Tooltip>\n    );\n  };\n\n  columns.unshift({\n    title: '名称',\n    dataIndex: 'name',\n    width: '150px',\n    align: 'center',\n    render: renderTableRowName\n  });\n\n  /**\n   * 生成结果展示按钮\n   * @param text\n   * @param record\n   * @param index\n   * @returns\n   */\n  const renderResultBtn = (text: string, record: any, index: number) => {\n    const url = getFullUrl(record);\n    return (\n      <Tooltip\n        overlayClassName=\"qrcode-result\"\n        color=\"#fff\"\n        trigger=\"click\"\n        placement=\"left\"\n        {...(!url ? { visible: false } : {})}\n        title={() => {\n          return (\n            <>\n              <QRCode style={{ cursor: 'pointer' }} value={url} size={200} fgColor=\"#000000\" />\n              {url}\n              <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '10px' }}>\n                <CopyToClipboard text={url} onCopy={() => message.success('复制成功')}>\n                  <Button type=\"primary\">复制url</Button>\n                </CopyToClipboard>\n              </div>\n            </>\n          );\n        }}\n      >\n        <Button type=\"primary\" disabled={!url}>\n          查看结果\n        </Button>\n      </Tooltip>\n    );\n  };\n\n  /**\n   * 增加二维码展示\n   */\n  columns.push({\n    title: '结果',\n    dataIndex: 'qrcode',\n    align: 'center',\n    render: renderResultBtn\n  });\n\n  /**\n   * 选择行数据\n   * @param keys\n   */\n  const onSelectChange = (keys: ReactText[]) => {\n    setSelectedRowKeys(keys);\n  };\n  const showModal = (key: string) => () => {\n    setModalVisiable({ [key]: true });\n  };\n\n  const closeModal = (key: string) => () => {\n    setModalVisiable({ [key]: false });\n  };\n\n  /**\n   * 将当前所有url保存至redis\n   */\n  const saveUrl = async () => {\n    if (!fileName) {\n      message.error('请填写Key值');\n      return;\n    }\n    localStorage.setItem('KEY', fileName);\n    const { exist } = await existRedis(fileName);\n    const saveData = () => {\n      const value = dataSource.map((data: any) => {\n        return {\n          name: data.name,\n          url: getFullUrl(data)\n        };\n      });\n      setRedis(fileName, value);\n      closeModal('fileName')();\n      message.success('保存成功');\n    };\n    if (exist === 1) {\n      Modal.confirm({\n        content: '此key已存在，确认覆盖吗？',\n        onOk: saveData\n      });\n      return;\n    }\n    saveData();\n  };\n\n  /**\n   * 查询\n   * @param params\n   */\n  const onQueryClick = async (params: any) => {\n    const { name: queryName = '', url = '' } = params;\n    const list = await urlStore.getAllData();\n    const filterData = list.filter((data: any) => {\n      const { key, name = '' } = data;\n      const keyName = key + name;\n      return keyName.includes(queryName) && getFullUrl(data).includes(url);\n    });\n    setDataSource(filterData);\n  };\n\n  return (\n    <div className=\"qrcode-content\">\n      <SearchBox conditions={CONDITIONS} onQueryClick={onQueryClick} />\n      <div className=\"opt-box\">\n        <Button className=\"btn\" onClick={addData()}>\n          新建一条\n        </Button>\n        <Button className=\"btn\" onClick={copyData}>\n          复制\n        </Button>\n        <Button className=\"btn\" onClick={changePart()}>\n          增加分段\n        </Button>\n        <Button className=\"btn\" onClick={deleteData}>\n          删除记录\n        </Button>\n        <ParseImg />\n        <Button className=\"btn\" onClick={showModal('fileName')}>\n          保存URL\n        </Button>\n        <Tooltip\n          overlayClassName=\"qrcode-result\"\n          color=\"#fff\"\n          trigger=\"click\"\n          {...(!fileName ? { visible: false } : {})}\n          placement=\"right\"\n          title={() => {\n            const url = `${window.location.origin}/call-app?key=${fileName}`;\n            return (\n              <>\n                <QRCode style={{ cursor: 'pointer' }} value={url} size={200} fgColor=\"#000000\" />\n                {url}\n                <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '10px' }}>\n                  <CopyToClipboard text={url} onCopy={() => message.success('复制成功')}>\n                    <Button>复制url</Button>\n                  </CopyToClipboard>\n                </div>\n              </>\n            );\n          }}\n        >\n          <Button className=\"btn\">查看已保存</Button>\n        </Tooltip>\n      </div>\n\n      <Table\n        rowKey=\"key\"\n        rowSelection={{\n          selectedRowKeys,\n          onChange: onSelectChange\n        }}\n        dataSource={dataSource}\n        columns={columns}\n        pagination={{\n          total: dataSource.length,\n          pageSize: 5,\n          responsive: true\n        }}\n      />\n\n      <Modal\n        title=\"唯一Key\"\n        visible={modalVisiable['fileName']}\n        closable={false}\n        cancelText=\"取消\"\n        okText=\"保存\"\n        onCancel={closeModal('fileName')}\n        onOk={saveUrl}\n      >\n        <p>此key是作为数据存储的唯一标识,建议使用你的OA账号作为key</p>\n        <Input value={fileName} onChange={(e: any) => setFileName(e.target.value || '')} />\n      </Modal>\n    </div>\n  );\n}\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-07-19 23:39:14\n * @Last Modified by: qiuz\n */\n\nexport const CONDITIONS = [\n  {\n    label: '名称',\n    type: 'string' as 'string',\n    queryIndex: 'name'\n  },\n  {\n    label: 'URL',\n    type: 'string' as 'string',\n    queryIndex: 'url'\n  }\n];\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-01-24 18:39:02\n * @Last Modified by: qiuz\n */\n\nimport { Button, message, Modal, Upload } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './index.less';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { UploadOutlined } from '@ant-design/icons';\nimport jsQR from 'jsqr';\nimport { useClipboard } from 'hooks';\n\n/**\n * 解析二维码图片\n */\nexport default function ParseImg() {\n  const [modalVisiable, setModalVisiable] = useState(false);\n\n  const [decodeUrl, setDecodeUrl] = useState('');\n\n  const [clipboardImg, setClipboardImg] = useState('');\n\n  useEffect(() => {}, []);\n\n  /**\n   * 监听粘贴事件\n   * 使用useCallback保证页面re-render时此函数内存地址不变，这样才能removeListener\n   * 如果需要更新外部数据，依赖需要传入，否则数据不会更新导致数据出错\n   */\n  const pasteListener = useCallback((e: ClipboardEvent) => {\n    const file = useClipboard(e);\n    if (!file) return message.error('请先复制图片');\n    parseImg(file as File);\n  }, []);\n\n  /**\n   * 文件变动\n   * @param info\n   * @returns\n   */\n  const onFileChange = (info: any) => {\n    const { file } = info;\n    if (!file) return;\n    parseImg(file);\n  };\n\n  /**\n   * 解析图片\n   * @param file\n   */\n  const parseImg = (file: File) => {\n    const image: HTMLImageElement = document.createElement('img');\n    image.src = URL.createObjectURL(file);\n    setClipboardImg(image.src);\n    image.onload = () => {\n      const canvas: HTMLCanvasElement = document.createElement('canvas');\n      const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0);\n      const imageData: ImageData = context.getImageData(0, 0, image.width, image.height);\n      const { data } = jsQR(imageData.data, image.width, image.height) || {};\n      if (!data) return message.error('解析失败，请确认图片包含二维码');\n      setDecodeUrl(data);\n      message.success('二维码识别成功');\n    };\n  };\n\n  const toggleModal =\n    (show = false) =>\n    () => {\n      setModalVisiable(show);\n      show ? document.addEventListener('paste', pasteListener) : document.removeEventListener('paste', pasteListener);\n    };\n\n  return (\n    <div className=\"parse-img-content\">\n      <Button className=\"btn\" onClick={toggleModal(true)}>\n        识别二维码\n      </Button>\n      <Modal visible={modalVisiable} title=\"识别二维码\" footer={null} onCancel={toggleModal()}>\n        <div className=\"flex-center-colum\">\n          <span\n            className=\"flex-center-colum decode-qrcode-text\"\n            style={{\n              marginBottom: 30\n            }}\n          >\n            支持解析剪贴板图片或者上传二维码\n            <span style={{ color: 'rgba(0, 0, 0, 0.45)', fontSize: 10 }}>右键复制图片或者截图，不支持直接复制文件(浏览器安全限制)</span>\n          </span>\n          {clipboardImg && (\n            <div className=\"decode-show\">\n              <img className=\"decode-show-img\" src={clipboardImg} alt=\"\" />\n              <CopyToClipboard text={decodeUrl} onCopy={() => message.success('复制成功')}>\n                <div className=\"decode-show-url\">{decodeUrl}</div>\n              </CopyToClipboard>\n            </div>\n          )}\n          <Upload beforeUpload={() => false} onChange={onFileChange} showUploadList={false}>\n            <Button type=\"primary\" icon={<UploadOutlined />}>\n              选择图片 或 Ctrl + V\n            </Button>\n          </Upload>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","function setCookie(cname: any, cvalue: any, exdays: any) {\n  var d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  var expires = 'expires=' + d.toUTCString();\n  document.cookie = cname + '=' + cvalue + '; ' + expires;\n}\nfunction getCookie(cname: any) {\n  var name = cname + '=';\n  var ca = document.cookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i].trim();\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n}\n\nfunction checkCookie(cname: any, cookie: any, exdays: number) {\n  let user = getCookie(cname);\n  if (user != '') {\n    setCookie('token', '', exdays);\n  } else {\n    setCookie('token', cookie, exdays);\n  }\n}\nexport { setCookie, getCookie, checkCookie };\n","import Axios from 'axios';\nimport { getCookie } from '../utils/cookie';\n\nconst tip = (msg: string) => {\n  console.error(msg);\n};\n\nconst modalQueueMap = new Map();\n\n//接口返回正常,状态异常\nconst codeErrorHandle = (resData: { message: any; code: number }) => {\n  let message = resData.message;\n  switch (resData.code) {\n    case 1:\n      message = message || '操作失败';\n      break;\n    case 401001:\n      message = message || 'token为空';\n      break;\n    case 401002:\n      message = message || 'token未经授权';\n      break;\n    case 401003:\n      message = message || '经纪人没有买商业套餐';\n      break;\n    case 400001:\n      message = message || 'from字段空';\n      break;\n    case 401004:\n      message = message || '对不起，您暂无查看权限。';\n      break;\n    case 401005:\n      message = message || '对不起，您无认领权限，暂时无法操作';\n      break;\n    case 500:\n      message = message || '服务异常';\n      break;\n    default:\n    //token过期\n    // case 403:\n    //   message = '登录过期, 请重新登录';\n    //   break;\n    // case 406:\n    //   message = '对不起，暂无业主房源';\n    //   break;\n    //console.log('default:', resData);\n  }\n\n  //存在对应状态码\n  if (modalQueueMap.has(resData.code)) return;\n\n  //不存在对应状态码\n  modalQueueMap.set(resData.code, {\n    code: resData.code,\n    message: message\n  });\n\n  console.log('modalQueueMap:', modalQueueMap);\n\n  if (resData.code == 406) {\n    console.warn(message);\n    //modalQueueMap.delete(resData.code);\n  } else {\n    console.error(message);\n    modalQueueMap.delete(resData.code);\n  }\n};\n\n//请求失败后的错误统一处理\nconst netErrorHandle = (status: any, other: any) => {\n  switch (status) {\n    //未登录，去登录\n    case 401:\n      // toLogin();\n      break;\n    case 403:\n      tip('登录过期, 请重新登录');\n      // setTimeout(() => {\n      //   toLogin();\n      // }, 1000);\n      break;\n    case 404:\n      tip('请求不存在!');\n      break;\n    default:\n      console.log(other);\n  }\n};\n\n//创建axios实例\nconst instance = Axios.create({ timeout: 5000 });\n\n/**\n * 请求拦截器\n * 每次请求前，如果存在token则在请求头中携带token\n */\n\ninstance.interceptors.request.use(\n  (config) => {\n    // let token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxODg1NzM4MzMzMyJ9.GWnwqses61dKzz5KrOHApOoD0Bc4o1f6KLyGE4soj7U';//获取token\n    let token = getCookie('token');\n    token && (config.headers.token = token);\n    config.withCredentials = true;\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n/**\n * 响应拦截器\n * 拦截响应并统一处理\n */\n\ninstance.interceptors.response.use(\n  (res: any) => {\n    if (res.status && res.status == 200) {\n      return Promise.resolve(res.data);\n    } else {\n      codeErrorHandle(res.data);\n      return Promise.reject(res);\n    }\n  },\n  (error: any) => {\n    const { response } = error;\n    if (response) {\n      netErrorHandle(response.status, response.data.message);\n      return Promise.reject(response);\n    } else {\n      //断网情况处理\n      if (!window.navigator.onLine) {\n        //通知断网\n      } else {\n        return Promise.reject(error);\n      }\n    }\n  }\n);\n\nexport default instance;\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2018-12-11 11:27:12\n * @Last Modified by: qiuz\n * @Last Modified time: 2021-01-19 23:29:29\n */\n\nconst pattern = {\n  // http://emailregex.com/\n  // eslint-disable-next-line no-useless-escape\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  // eslint-disable-next-line prefer-regex-literals\n  url: new RegExp(\n    '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n    'i'\n  ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\n\nexport const isNumber = (value: any) => {\n  return typeof value === 'number';\n};\n\nexport const isRegExp = (value: any) => {\n  return Object.prototype.toString.call(value) === '[object RegExp]';\n};\n\nexport const isObject = (value: any) => {\n  return Object.prototype.toString.call(value) === '[object Object]';\n};\n\nexport const isError = (value: any) => {\n  return Object.prototype.toString.call(value) === '[object Error]';\n};\n\nexport const isString = (value: any) => {\n  return typeof value === 'string';\n};\n\nexport const isFunction = (value: any) => {\n  return typeof value === 'function';\n};\n\nexport const isArray = (value: any) => {\n  return Object.prototype.toString.call(value) === '[object Array]';\n};\n\nexport const isEmptyObject = (obj: any) => {\n  if (obj === null || obj === undefined) return 'Cannot convert undefined or null to object';\n  return Object.keys(obj).length === 0;\n};\n\nexport const isBoolean = (value: any) => {\n  return (\n    value === true ||\n    value === false ||\n    (isObject(value) && Object.prototype.toString.call(value) === '[object Boolean]')\n  );\n};\n\nexport const isInteger = (value: any) => {\n  return isNumber(value) && parseInt(value, 10) === value;\n};\nexport const isFloat = (value: any) => {\n  return isNumber(value) && !isInteger(value);\n};\n\nexport const isDate = (value: any) => {\n  if (!value) return false;\n  return (\n    typeof value.getTime === 'function' &&\n    typeof value.getMonth === 'function' &&\n    typeof value.getYear === 'function'\n  );\n};\n\nexport const isEmail = (value: any) => {\n  return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n};\n\nexport const isUrl = (value: any) => {\n  return typeof value === 'string' && !!value.match(pattern.url);\n};\n\nexport const isHex = (value: any) => {\n  return typeof value === 'string' && !!value.match(pattern.hex);\n};\n\nexport const isPromise = (value: any) => {\n  return value && typeof value.then === 'function';\n};\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-02-05 23:39:57\n * @Last Modified by: qiuz\n */\n\nconst getTransaction = (db: IDBDatabase, storeName: string, mode?: IDBTransactionMode) => {\n  const res = db.transaction([storeName], mode);\n  res.onerror = (ev) => {\n    console.warn(ev);\n  };\n  return res;\n};\n\nexport const openDB = ({\n  dbName,\n  version = 1,\n  storeName = [''],\n  storeOption = { autoIncrement: true }\n}: {\n  dbName: string;\n  version?: number;\n  storeName?: string[];\n  storeOption?: IDBObjectStoreParameters;\n}): Promise<IDBDatabase> =>\n  new Promise((resolve, reject) => {\n    let db: IDBDatabase;\n    if (!dbName) reject('db name shoudle be string');\n\n    const request = window.indexedDB.open(dbName, version);\n\n    request.onerror = function (event) {\n      console.warn('open db fail:', event);\n      reject(event);\n    };\n\n    request.onsuccess = function (event) {\n      db = request.result;\n      resolve(db);\n    };\n\n    request.onupgradeneeded = function (event: any) {\n      db = event.target.result;\n      let objectStore;\n      storeName.forEach((name: string) => {\n        if (!db.objectStoreNames.contains(name)) {\n          objectStore = db.createObjectStore(name, storeOption);\n        }\n      });\n    };\n  });\n\nexport const addStore = ({\n  db,\n  storeName,\n  data = {}\n}: {\n  db: IDBDatabase;\n  storeName: string;\n  data: any;\n}) =>\n  new Promise((resolve, reject) => {\n    if (!db) reject('db is null');\n    if (!storeName) reject('storeName is null');\n    const request = getTransaction(db, storeName, 'readwrite').objectStore(storeName).add(data);\n\n    request.onsuccess = function (event) {\n      resolve(event);\n    };\n\n    request.onerror = function (event) {\n      console.warn('new data fail');\n      reject(event);\n    };\n  });\n\nexport const updateStore = ({\n  db,\n  storeName,\n  data = {}\n}: {\n  db: IDBDatabase;\n  storeName: string;\n  data: any;\n}) =>\n  new Promise(async (resolve, reject) => {\n    if (!db) reject('db is null');\n    if (!storeName) reject('storeName is null');\n    const res = await readStore({ db, storeName, key: data.key });\n    const request = getTransaction(db, storeName, 'readwrite')\n      .objectStore(storeName)\n      [res ? 'put' : 'add'](data);\n\n    request.onsuccess = function (event) {\n      resolve(event);\n    };\n\n    request.onerror = function (event) {\n      console.warn('update data fail');\n      reject(event);\n    };\n  });\n\nexport const readStore = ({\n  db,\n  storeName,\n  key,\n  type = 'get'\n}: {\n  db: IDBDatabase;\n  storeName: string;\n  key?: string | number;\n  type?: 'get' | 'getAll';\n}): Promise<any> =>\n  new Promise((resolve, reject) => {\n    if (!db) reject('db is null');\n    if (!storeName) reject('storeName is null');\n    const transaction = getTransaction(db, storeName);\n    const objectStore = transaction.objectStore(storeName);\n    const request =\n      type === 'getAll' ? objectStore.getAll() : objectStore.get(key as string | number);\n\n    request.onerror = function (event) {\n      console.warn('read data fail');\n      reject(event);\n    };\n\n    request.onsuccess = function (event) {\n      if (request.result) {\n        resolve(request.result);\n      } else {\n        resolve(undefined);\n      }\n    };\n  });\n\nexport const removeStore = ({\n  db,\n  storeName,\n  key\n}: {\n  db: IDBDatabase;\n  storeName: string;\n  key?: string | number;\n}): Promise<any> =>\n  new Promise((resolve, reject) => {\n    if (!db) reject('db is null');\n    if (!storeName) reject('storeName is null');\n    const transaction = getTransaction(db, storeName, 'readwrite');\n    const objectStore = transaction.objectStore(storeName);\n    const request = objectStore.delete(key as string | number);\n\n    request.onsuccess = function (event) {\n      resolve(event);\n    };\n    request.onerror = function (event) {\n      console.warn('remove data fail');\n      reject(event);\n    };\n  });\n\nexport const getAllKeys = ({\n  db,\n  storeName\n}: {\n  db: IDBDatabase;\n  storeName: string;\n}): Promise<any> =>\n  new Promise((resolve, reject) => {\n    if (!db) reject('db is null');\n    if (!storeName) reject('storeName is null');\n    const transaction = getTransaction(db, storeName);\n    const objectStore = transaction.objectStore(storeName);\n    const request = objectStore.getAllKeys();\n\n    request.onsuccess = function (event) {\n      resolve(request.result);\n    };\n    request.onerror = function (event) {\n      console.warn('get all keys fail');\n      reject(event);\n    };\n  });\n\nexport type PageData = {\n  code: number;\n  total: number;\n  data: any[];\n};\n\nexport const getDataByPage = ({\n  db,\n  storeName,\n  pageNum,\n  pageSize = 10\n}: {\n  db: IDBDatabase;\n  storeName: string;\n  pageNum: number;\n  pageSize?: number;\n}): Promise<PageData> =>\n  new Promise(async (resolve, reject) => {\n    if (!db) reject('db is null');\n    if (!storeName) reject('storeName is null');\n    const allKeys: any[] = await getAllKeys({ db, storeName });\n    if (allKeys.length < 1) {\n      resolve({ code: 0, data: [], total: 0 });\n      return;\n    }\n    const transaction = getTransaction(db, storeName, 'readonly');\n    const objectStore = transaction.objectStore(storeName);\n    const count = pageSize || 10;\n    let keysList = [];\n    const allKeysReverse = allKeys.reverse();\n    for (let i = 0, len = allKeysReverse.length; i < len; i += count) {\n      keysList.push(allKeysReverse.slice(i, i + count));\n    }\n    const currentKeys = keysList[(pageNum || 1) - 1];\n    const start = Math.min(...currentKeys);\n    const end = Math.max(...currentKeys);\n    const boundKeyRange = IDBKeyRange.bound(start, end);\n    const rowData: any[] = [];\n    const request = objectStore.openCursor(boundKeyRange);\n    request.onsuccess = function (event: any) {\n      const cursor = event.target.result;\n      if (!cursor) {\n        resolve({ code: 0, total: allKeys.length, data: rowData.reverse() });\n        return;\n      }\n      rowData.push(cursor.value);\n      cursor.continue();\n    };\n    request.onerror = function (event) {\n      console.warn('read data fail');\n      reject({ code: 1, error: event });\n    };\n  });\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-02-23 22:57:35\n * @Last Modified by: qiuz\n */\n\nimport { isObject } from './is-type';\n\n/**\n * JSON字符串格式化，若解析失败返回原数据\n * @param str\n * @returns JSON String | str\n */\nexport const handleJsonStr = (str: string) => {\n  if (!str) return str;\n  let json = null;\n  try {\n    json = JSON.parse(str.replace(/(?:\\s*['\"]*)?([a-zA-Z0-9_-]+)(?:['\"]*\\s*)?:/g, '\"$1\":'));\n  } catch (error) {\n    console.log(error);\n  }\n  return json ? JSON.stringify(json, null, 4) : str;\n};\n\nexport const isJson = (str: string) => {\n  try {\n    return isObject(JSON.parse(str));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst IS_SETUPED_SCRIPT: string[] = [];\nexport const setupScript = (src: string, crossorigin = ''): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (IS_SETUPED_SCRIPT.indexOf(src) > -1) {\n      resolve();\n      return;\n    }\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n    script.crossOrigin = crossorigin;\n    script.onerror = (err: any) => {\n      console.log(err);\n      document.body.removeChild(script);\n      reject(new URIError(`The Script ${src} is no accessible.`));\n    };\n    script.onload = () => {\n      IS_SETUPED_SCRIPT.push(src);\n      resolve();\n    };\n    document.body.appendChild(script);\n  });\n};\n\nexport const filterObjectEmptyValue = (data: object | undefined) => {\n  if (!data) return {};\n  const result = {};\n  Object.keys(data).forEach((key: string) => {\n    data[key] !== null && data[key] !== undefined && (result[key] = data[key]);\n  });\n  return result;\n};\n\n/**\n * @description 数组切割分组\n * @param array\n * @param subGroupLength\n */\n export const arrayGroup = (array: any[], subGroupLength: number, fillItem?: any): any[] => {\n  const reslut = [];\n  for (let i = 0, len = array.length; i < len; i += subGroupLength) {\n    const group = array.slice(i, i + subGroupLength);\n    if (fillItem && group.length < subGroupLength) {\n      group.push(...new Array(subGroupLength - group.length).fill(fillItem));\n    }\n    reslut.push(group);\n  }\n  return reslut;\n};\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-06-08 00:01:12\n * @Last Modified by: qiuz\n */\n\nimport { Resource } from 'service';\nimport { isArray, isObject, isString } from './is-type';\n\nexport const getRedis = async (key: string): Promise<any> => {\n  if (!key) {\n    console.error('key should be not null');\n    return Promise.reject();\n  }\n  try {\n    const res: any = await Resource.redis.get({ type: 'get', key }, {});\n    return isString(res) ? JSON.parse(res) : res;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const setRedis = async (key: string, value: any): Promise<any> => {\n  if (!key) {\n    console.error('key should be not null');\n    return Promise.reject();\n  }\n  if (!value) {\n    console.error('val should be not null');\n    return Promise.reject();\n  }\n  const val = isObject(value) || isArray(value) ? JSON.stringify(value) : value.toString();\n  try {\n    return Resource.redis.post({ type: 'set' }, { data: { key, val } });\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const delRedis = async (key: string): Promise<any> => {\n  if (!key) {\n    console.error('key should be not null');\n    return Promise.reject();\n  }\n  try {\n    return Resource.redis.get({ type: 'get', key });\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const existRedis = async (key: string): Promise<any> => {\n  if (!key) {\n    console.error('key should be not null');\n    return Promise.reject();\n  }\n  try {\n    return Resource.redis.get({ type: 'exists', key });\n  } catch (error) {\n    return console.log(error);\n  }\n};\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2018-11-02 14:38:52\n * @Last Modified by: qiuz\n * @Last Modified time: 2022-02-26 18:00:42\n */\n\nimport 'whatwg-fetch';\nimport { filterObjectEmptyValue } from 'utils';\nimport { message as antdMsg } from 'antd';\n\nconst successCode = [0];\nconst exitFn = () => {\n  // const redirectTo = window.location.href;\n  // jump(`/admin/login?redirectTo=${encodeURIComponent(redirectTo)}`, { redirect: true });\n};\ninterface ConfigType {\n  loadingDelay?: number;\n  des?: boolean;\n  [propName: string]: any;\n}\n\nconst HEADER: any = {\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n};\n\nconst fetchMethod = (_url: string, _config: any = {}) => {\n  return fetch(_url, { ...HEADER, ..._config })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response.json().then(undefined, () => Promise.resolve(''));\n    })\n    .then((res: any) => {\n      const { config = {}, code, msg } = res;\n      const { dataKey = 'data' } = config;\n      const { directReturn = false } = _config;\n      if (directReturn) {\n        return Promise.resolve(res);\n      }\n      if (code === 401) {\n        exitFn();\n        return Promise.reject(res);\n      }\n      if (successCode.indexOf(code) > -1) {\n        return Promise.resolve(res[dataKey] || {});\n      }\n      antdMsg.error(msg || '系统异常');\n      return Promise.reject(res);\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nconst matchUrlSearchParams = (url: string, urlSearchParams: any) => {\n  if (!urlSearchParams) {\n    return url.replace(/\\/:[^?]+/g, '');\n  }\n  const u = new URLSearchParams();\n  // tslint:disable-next-line:variable-name\n  let _url = Object.keys(urlSearchParams).reduce((pre, next) => {\n    if (pre.includes(':' + next)) {\n      return pre.replace(':' + next, urlSearchParams[next]);\n    } else {\n      if (urlSearchParams[next] && urlSearchParams[next].constructor === Array) {\n        urlSearchParams[next].forEach((value: any) => {\n          u.append(next, value);\n        });\n      } else {\n        u.append(next, urlSearchParams[next]);\n      }\n      return pre;\n    }\n  }, url);\n  // let u = toQueryString(urlSearchParams);\n  _url = _url.replace(/\\/:[^?]+/g, '');\n  return _url + (u.toString() === '' ? '' : '?' + u);\n};\n\nclass FetchApi {\n  url = '';\n\n  constructor(_url: string) {\n    this.url = _url;\n  }\n\n  get = (urlSearchParams: object, bodyParams?: object, config?: ConfigType) => {\n    return fetchMethod(\n      matchUrlSearchParams(this.url, { ...urlSearchParams, ...bodyParams }),\n      config\n    );\n  };\n\n  post = (urlSearchParams?: object, bodyParams?: any, config?: ConfigType) => {\n    return fetchMethod(matchUrlSearchParams(this.url, urlSearchParams), {\n      ...config,\n      method: 'POST',\n      body: JSON.stringify(filterObjectEmptyValue(bodyParams))\n    });\n  };\n\n  upload = (urlSearchParams: object, bodyParams: FormData) => {\n    return fetchMethod(matchUrlSearchParams(this.url, urlSearchParams), {\n      method: 'POST',\n      isUpoad: true,\n      body: bodyParams\n    });\n  };\n\n  delete = (urlSearchParams: object, config?: ConfigType) => {\n    return fetchMethod(matchUrlSearchParams(this.url, urlSearchParams), {\n      ...config,\n      method: 'DELETE'\n    });\n  };\n\n  put = (urlSearchParams: object, bodyParams: object, config?: ConfigType) => {\n    return fetchMethod(matchUrlSearchParams(this.url, urlSearchParams), {\n      ...config,\n      method: 'PUT',\n      body: JSON.stringify(filterObjectEmptyValue(bodyParams))\n    });\n  };\n\n  patch = (urlSearchParams: object, bodyParams: object, config?: ConfigType) => {\n    return fetchMethod(matchUrlSearchParams(this.url, urlSearchParams), {\n      ...config,\n      method: 'PATCH',\n      body: JSON.stringify(filterObjectEmptyValue(bodyParams))\n    });\n  };\n}\n\nconst Http = (url: string) => {\n  return new FetchApi(url);\n};\n\nexport default Http;\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-01-19 22:21:24\n * @Last Modified by: qiuz\n */\n\nimport HttpResource from './fetch';\n\nconst API_HOST = '';\n\nconst prefix = process.env.NODE_ENV === 'development' ? '' : '';\n\nexport const Resource = {\n  /**\n   * 上传\n   */\n  cdn: HttpResource(`${API_HOST}${prefix}/upload/:type`),\n  url: HttpResource(`${API_HOST}${prefix}/url/:type`),\n  /**\n   * redis\n   */\n  redis: HttpResource(`${API_HOST}${prefix}/redis/:type`),\n\n  /**\n   * doc\n   */\n  doc: HttpResource(`${API_HOST}${prefix}/:type`),\n\n  /**\n   * direct fetch\n   */\n  directFetch: HttpResource(`:type`)\n};\n"],"sourceRoot":""}